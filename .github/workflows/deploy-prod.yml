name: Deploy Production

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-fe-v2:
    name: Build Laravel App Front End
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Build
      working-directory: ./src
      run: |
        npm install
        npm run build
  build-fe-v1:
    name: Build Legacy App Front End
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Build
      working-directory: ./src_v1
      run: |
        npm install
        npm run build
  laravel-tests:
    name: "Test Laravel"
    runs-on: self-hosted
    needs: [build-fe-v2, build-fe-v1]
    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2'
    - uses: actions/checkout@v3
    - name: Copy .env
      working-directory: ./src
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      working-directory: ./src
      run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Build front end
      working-directory: ./src
      run: |
        npm install
        npm run build
    - name: Generate key
      working-directory: ./src
      run: php artisan key:generate
    - name: Directory Permissions
      working-directory: ./src
      run: chmod -R 777 storage bootstrap/cache
    # - name: Create Database
    #   working-directory: ./src
    #   run: |
    #     mkdir -p database
    #     touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via Pest
      working-directory: ./src
      env:
        DB_CONNECTION: mysql
        DB_HOST: ${{ secrets.TEST_DB_HOST }}
        DB_PORT: ${{ secrets.TEST_DB_PORT }}
        DB_DATABASE: ${{ secrets.TEST_DB_DATABASE }}
        DB_USERNAME: ${{ secrets.TEST_DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
      run: vendor/bin/pest
  deploy-staging:
    needs: [laravel-tests]
    name: Deploy to Production Environment
    # container: registry.gitlab.com/swimming-club-data-systems/membership:latest
    # container: ubuntu:23.04
    runs-on: self-hosted

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
      - name: "Setup PHP 8.2"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "8.2"
          extensions: bcmath, gd, redis
      - name: "Composer Install"
        uses: "ramsey/composer-install@v2"
        with:
          working-directory: ./src
      # - name: "Setup SSH"
      #   run: |
      #     eval $(ssh-agent -s)
      #     ssh-add <(echo "${{ secrets.SSH_PRIVATE_KEY }}")
      #     mkdir -p ~/.ssh/ && touch ~/.ssh/known_hosts
      #     echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
      # touch ~/.ssh/config
      # 'echo "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
      - name: "Deploy via Envoy"
        run: |
          src/vendor/bin/envoy run deploy --branch="${{github.ref_name}}" --commit="${{github.sha}}" --baseDir="/var/www/mt-laravel-prod"
  